<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="Gradle_Check_Platform_Java8_Oracle_Windows_testKit" xsi:noNamespaceSchemaLocation="http://www.jetbrains.com/teamcity/schemas/2018.1/project-config.xsd">
  <name>Test Coverage - Platform Java8 Oracle Windows (testKit)</name>
  <description />
  <settings>
    <options>
      <option name="artifactRules" value="build/report-* =&gt; .&#xA;buildSrc/build/report-* =&gt; .&#xA;subprojects/*/build/tmp/test files/** =&gt; test-files&#xA;build/errorLogs/** =&gt; errorLogs" />
      <option name="buildDefaultBranch" value="false" />
      <option name="checkoutMode" value="ON_AGENT" />
      <option name="executionTimeoutMin" value="180" />
    </options>
    <parameters>
      <param name="env.JAVA_HOME" value="%windows.java8.oracle.64bit%" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_1" name="CLEAN_BUILD_SRC" type="gradle-runner">
        <parameters>
          <param name="teamcity.build.workingDir" value="buildSrc" />
          <param name="teamcity.coverage.emma.include.source" value="true" />
          <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
          <param name="teamcity.coverage.idea.includePatterns" value="*" />
          <param name="teamcity.coverage.jacoco.patterns" value="+:*" />
          <param name="teamcity.step.mode" value="default" />
          <param name="ui.gradleRUnner.gradle.build.file" value="build.gradle.kts" />
          <param name="ui.gradleRunner.additional.gradle.cmd.params" value="-PmaxParallelForks=%maxParallelForks% -s --daemon --continue -I &quot;%teamcity.build.checkoutDir%/gradle/init-scripts/build-scan.init.gradle.kts&quot; &quot;-Djava7Home=%windows.java7.oracle.64bit%&quot; &quot;-Djava9Home=%windows.java9.oracle.64bit%&quot; -Dorg.gradle.internal.tasks.createops" />
          <param name="ui.gradleRunner.gradle.tasks.names" value="clean" />
          <param name="ui.gradleRunner.gradle.wrapper.path" value=".." />
          <param name="ui.gradleRunner.gradle.wrapper.useWrapper" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="GRADLE_RUNNER" type="gradle-runner">
        <parameters>
          <param name="teamcity.coverage.emma.include.source" value="true" />
          <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
          <param name="teamcity.coverage.idea.includePatterns" value="*" />
          <param name="teamcity.coverage.jacoco.patterns" value="+:*" />
          <param name="teamcity.step.mode" value="default" />
          <param name="ui.gradleRUnner.gradle.build.file" value="" />
          <param name="ui.gradleRunner.additional.gradle.cmd.params" value="-PmaxParallelForks=%maxParallelForks% -s --daemon --continue -I &quot;%teamcity.build.checkoutDir%/gradle/init-scripts/build-scan.init.gradle.kts&quot; &quot;-Djava7Home=%windows.java7.oracle.64bit%&quot; &quot;-Djava9Home=%windows.java9.oracle.64bit%&quot; -Dorg.gradle.internal.tasks.createops --build-cache -Dgradle.cache.remote.url=&quot;%gradle.cache.remote.url%&quot; -Dgradle.cache.remote.username=&quot;%gradle.cache.remote.username%&quot; -Dgradle.cache.remote.password=&quot;%gradle.cache.remote.password%&quot; &quot;-PtestJavaHome=%windows.java8.oracle.64bit%&quot; &quot;-Dscan.tag.FunctionalTest&quot; &quot;-Dscan.value.coverageOs=windows&quot; &quot;-Dscan.value.coverageJvmVendor=oracle&quot; &quot;-Dscan.value.coverageJvmVersion=java8&quot; -PteamCityUsername=%teamcity.username.restbot% -PteamCityPassword=%teamcity.password.restbot% -PteamCityBuildId=%teamcity.build.id% &quot;-Dscan.tag.Check&quot; &quot;-Dscan.tag.BranchBuildAccept&quot;" />
          <param name="ui.gradleRunner.gradle.tasks.names" value="clean testKit:platformTest" />
          <param name="ui.gradleRunner.gradle.wrapper.useWrapper" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_3" name="CHECK_CLEAN_M2" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[IF exist %teamcity.agent.jvm.user.home%\.m2\repository (
    TREE %teamcity.agent.jvm.user.home%\.m2\repository
    RMDIR /S /Q %teamcity.agent.jvm.user.home%\.m2\repository
    EXIT 1
)]]></param>
          <param name="teamcity.step.mode" value="execute_always" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_4" name="VERIFY_TEST_FILES_CLEANUP" type="gradle-runner">
        <parameters>
          <param name="teamcity.coverage.emma.include.source" value="true" />
          <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
          <param name="teamcity.coverage.idea.includePatterns" value="*" />
          <param name="teamcity.coverage.jacoco.patterns" value="+:*" />
          <param name="teamcity.step.mode" value="default" />
          <param name="ui.gradleRUnner.gradle.build.file" value="" />
          <param name="ui.gradleRunner.additional.gradle.cmd.params" value="-PmaxParallelForks=%maxParallelForks% -s --daemon --continue -I &quot;%teamcity.build.checkoutDir%/gradle/init-scripts/build-scan.init.gradle.kts&quot; &quot;-Djava7Home=%windows.java7.oracle.64bit%&quot; &quot;-Djava9Home=%windows.java9.oracle.64bit%&quot; -Dorg.gradle.internal.tasks.createops" />
          <param name="ui.gradleRunner.gradle.tasks.names" value="verifyTestFilesCleanup" />
          <param name="ui.gradleRunner.gradle.wrapper.useWrapper" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_5" name="KILL_PROCESSES_STARTED_BY_GRADLE" type="gradle-runner">
        <parameters>
          <param name="teamcity.coverage.emma.include.source" value="true" />
          <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
          <param name="teamcity.coverage.idea.includePatterns" value="*" />
          <param name="teamcity.coverage.jacoco.patterns" value="+:*" />
          <param name="teamcity.step.mode" value="execute_always" />
          <param name="ui.gradleRUnner.gradle.build.file" value="" />
          <param name="ui.gradleRunner.additional.gradle.cmd.params" value="-PmaxParallelForks=%maxParallelForks% -s --daemon --continue -I &quot;%teamcity.build.checkoutDir%/gradle/init-scripts/build-scan.init.gradle.kts&quot; &quot;-Djava7Home=%windows.java7.oracle.64bit%&quot; &quot;-Djava9Home=%windows.java9.oracle.64bit%&quot; -Dorg.gradle.internal.tasks.createops" />
          <param name="ui.gradleRunner.gradle.tasks.names" value="killExistingProcessesStartedByGradle" />
          <param name="ui.gradleRunner.gradle.wrapper.useWrapper" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_6" name="TAG_BUILD" type="gradle-runner">
        <parameters>
          <param name="teamcity.coverage.emma.include.source" value="true" />
          <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
          <param name="teamcity.coverage.idea.includePatterns" value="*" />
          <param name="teamcity.coverage.jacoco.patterns" value="+:*" />
          <param name="teamcity.step.mode" value="execute_always" />
          <param name="ui.gradleRUnner.gradle.build.file" value="gradle/buildTagging.gradle" />
          <param name="ui.gradleRunner.additional.gradle.cmd.params" value="-PmaxParallelForks=%maxParallelForks% -s --daemon --continue -I &quot;%teamcity.build.checkoutDir%/gradle/init-scripts/build-scan.init.gradle.kts&quot; &quot;-Djava7Home=%windows.java7.oracle.64bit%&quot; &quot;-Djava9Home=%windows.java9.oracle.64bit%&quot; -Dorg.gradle.internal.tasks.createops -PteamCityUsername=%teamcity.username.restbot% -PteamCityPassword=%teamcity.password.restbot% -PteamCityBuildId=%teamcity.build.id% -PgithubToken=%github.ci.oauth.token%" />
          <param name="ui.gradleRunner.gradle.tasks.names" value="tagBuild" />
          <param name="ui.gradleRunner.gradle.wrapper.useWrapper" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="Gradle_Branches_GradlePersonalBranches" />
    </vcs-settings>
    <requirements>
      <contains id="RQ_1" name="teamcity.agent.jvm.os.name" value="Windows" />
    </requirements>
    <build-triggers />
    <artifact-dependencies>
      <dependency id="ARTIFACT_DEPENDENCY_Gradle_Check_SanityCheck" sourceBuildTypeId="Gradle_Check_SanityCheck" cleanDestination="true">
        <revisionRule name="sameChainOrLastFinished" revision="latest.sameChainOrLastFinished" />
        <artifact sourcePath="build-receipt.properties =&gt; incoming-distributions" />
      </dependency>
    </artifact-dependencies>
    <dependencies>
      <depend-on sourceBuildTypeId="Gradle_Check_Stage_QuickFeedback_Trigger">
        <options>
          <option name="run-build-if-dependency-failed" value="CANCEL" />
          <option name="run-build-if-dependency-failed-to-start" value="CANCEL" />
          <option name="take-started-build-with-same-revisions" value="true" />
          <option name="take-successful-builds-only" value="true" />
        </options>
      </depend-on>
      <depend-on sourceBuildTypeId="Gradle_Check_SanityCheck">
        <options>
          <option name="run-build-if-dependency-failed" value="CANCEL" />
          <option name="run-build-if-dependency-failed-to-start" value="CANCEL" />
          <option name="take-started-build-with-same-revisions" value="true" />
          <option name="take-successful-builds-only" value="true" />
        </options>
      </depend-on>
    </dependencies>
    <cleanup />
  </settings>
</build-type>

