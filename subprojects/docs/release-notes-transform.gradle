import org.jsoup.nodes.Element
import org.jsoup.select.Elements

decorateReleaseNotes {
    ext.headHtml = file("src/docs/release/head.html").getText("utf-8")
    inputs.property("headHtml", headHtml)
    
    transform {
        outputSettings().indentAmount(2).prettyPrint(true)
        head().append(headHtml)
    }
    
    // wrap each h2 section in section.topic
    transform {
        def heading = body().select("h2").first()
        def inSection = [heading]
        Element next = heading.nextElementSibling()
        while (true) {
            if (next == null || next.tagName() == "h2") {
                def section = heading.before("<section class='topic'/>").previousElementSibling()
                Elements inSectionElements = new Elements(inSection)
                section.html(inSectionElements.outerHtml())
                inSectionElements.remove()

                if (next == null) {
                    break
                } else {
                    inSection = [next]
                    heading = next
                }
            } else {
                inSection << next
            }

            next = next.nextElementSibling()
        }
    }
    
    // wrap all content after the first element after a h3 (up to the next same level heading)
    // in a section.major-detail block
    transform {
        for (heading in body().select("h3")) {
            def detail = []
            Element next = heading.nextElementSibling()

            if (next == null || next.tagName() ==~ /h[123]/) {
                break
            }

            next = next.nextElementSibling()
            while (true) {
                if (next == null || next.tagName() ==~ /h[123]/) {
                    break
                }
                detail << next
                next = next.nextElementSibling()
            }

            if (detail) {
                def section = detail.first().before("<section class='major-detail'/>").previousElementSibling()
                Elements detailElements = new Elements(detail)
                section.html(detailElements.outerHtml())
                detailElements.remove()
            }
        }
    }
    
    // wrap all content after a h4 until the next heading in a section.minor-detail
    transform {
        for (heading in body().select("h4")) {
            def detail = []
            Element next = heading.nextElementSibling()
            while (true) {
                if (next == null || next.tagName() ==~ /h[1234]/) {
                    break
                }
                detail << next
                next = next.nextElementSibling()
            }

            if (detail) {
                def section = detail.first().before("<section class='minor-detail'/>").previousElementSibling()
                Elements detailElements = new Elements(detail)
                section.html(detailElements.outerHtml())
                detailElements.remove()
            }
        }
    }
    
    // add anchors for all of the headings
    transform {
        for (heading in body().select("h2,h3,h4")) {
            def anchorName = heading.text().toLowerCase().replaceAll(' ', '-')
            heading.prepend("<a name='$anchorName' class='anchor' href='#$anchorName'><span class='mini-icon mini-icon-link'></span></a>")
        }
    }
    
    // Add the TOC
    transform {
        def topics = [:]
        for (topicHeading in body().select("h2")) {
            def name = topicHeading.text()
            def anchor = topicHeading.children().first().attr("name")
            topics[name] = anchor
        }
        
        def tocSection = body().select("section.topic").first().before("<section class='table-of-contents'/>").previousElementSibling()
        tocSection.append("<h2>Table Of Contents</h2>")
        tocSection.append("<ul>")
        def list = tocSection.children().last()
        
        topics.each { name, anchor ->
            list.append("<li><a href='#$anchor'>$name</a></li>")
        }
    }
    
    // Add the heading
    transform {
        body().prepend("<h1>@version@ Release Notes</h1>")
        body().prepend("<img class='logo' src='logo.gif' />")
    }
}