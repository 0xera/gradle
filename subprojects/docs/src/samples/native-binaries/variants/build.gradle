apply plugin: 'cpp'

// START SNIPPET build-types
buildTypes {
    debug {}
    release {}
}
// END SNIPPET build-types

// START SNIPPET target-platforms
targetPlatforms {
    x86 {
        architecture "x86"
    }
    x64 {
        architecture "x86_64"
    }
    itanium {
        architecture "ia-64"
    }
}
// END SNIPPET target-platforms

executables {
    main {}
}
libraries {
    hello {}
}
sources.main.cpp.lib libraries.hello.static

// Apply arguments for debug binaries (these options are not yet set automatically)
// START SNIPPET build-type-config
binaries.all {
    if (toolChain in Gcc && buildType == buildTypes.debug) {
        cppCompiler.args "-g"
    }
    if (toolChain in VisualCpp && buildType == buildTypes.debug) {
        cppCompiler.args '/Zi'
        cppCompiler.define 'DEBUG'
        linker.args '/DEBUG'
    }
}
// END SNIPPET build-type-config

// Apply custom arguments for different target platforms
binaries.all {
    if (toolChain in Gcc && targetPlatform == targetPlatforms.x86) {
        cppCompiler.args '-O3'
    }
}

// Tasks to build all binaries for a tool chain
task gccExecutables {
    dependsOn binaries.withType(ExecutableBinary).matching {
        it.toolChain in Gcc
    }
}
task visualCppExecutables {
    dependsOn binaries.withType(ExecutableBinary).matching {
        it.toolChain in VisualCpp
    }
}
task buildExecutables {
    dependsOn binaries.withType(ExecutableBinary).matching {
        it.buildable
    }
}