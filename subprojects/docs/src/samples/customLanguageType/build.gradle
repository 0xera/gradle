/*
 * Copyright 2015 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.gradle.model.*
import org.gradle.model.collection.*

interface SampleComponent extends ComponentSpec {}
class DefaultSampleComponent extends BaseComponentSpec implements SampleComponent {}

interface SomeLanguageSourceSet extends LanguageSourceSet {}
class DefaultSomeLanguageSourceSet extends BaseLanguageSourceSet implements SomeLanguageSourceSet {}

@RuleSource
class CustomComponentPlugin{
    @ComponentType
    void register(ComponentTypeBuilder<SampleComponent> builder) {
        builder.defaultImplementation(DefaultSampleComponent)
    }

    @Mutate
    void createSampleComponentComponents(CollectionBuilder<SampleComponent> componentSpecs) {
        componentSpecs.create("main")
    }
}

@RuleSource
class SomeLanguagePlugin {
    @LanguageType
    void declareCustomLanguage(LanguageTypeBuilder<SomeLanguageSourceSet> builder) {
        builder.setLanguageName("SomeLanguage")
        builder.defaultImplementation(DefaultSomeLanguageSourceSet)
    }
}

apply plugin:CustomComponentPlugin
apply plugin:SomeLanguagePlugin


model {
    components {
        main {
            sources {
                myCustomSources(SomeLanguageSourceSet)
            }
        }
    }
}