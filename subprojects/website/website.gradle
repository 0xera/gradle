/*
 * Copyright 2011 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "base"
evaluationDependsOn ":docs"

apply from: "${rootDir}/gradle/ssh.gradle"

tasks.withType(SshTask) {
    host = 'gradle01.managed.contegix.com'
    userName = project.hasProperty('websiteScpUserName') ? project.websiteScpUserName : null
    password = project.hasProperty('websiteScpUserPassword') ? project.websiteScpUserPassword : null
}

uploadPath = { "/var/local/gradle-build-uploads/$it" }

// There's a script on the host that will allow running certain commands as sudo, to enable
// us to run some commands with privs. This script is configured via sudoers to allow shh exec
// from any user in the wheel group. That is, you must be a member of wheel to upload to the host.
asSudo = { Object[] args -> (["sudo", uploadPath("asSudo")] + args.toList()) as Object[] }

task uploadDocs(type: Scp) {
    verbose true
    isDir false
    source project(":docs").docsZip
    destination = uploadPath("docs/${->isNightlyBuild() ? 'nightly' : project.version}.zip")
    
    doLast {
        // unpack the zip to the right place and fix the perms
        ssh asSudo("move-docs", isNightlyBuild() ? 'nightly' : project.version)
        
        if (project.version.release) {
            // update the “current” symlink in the docs dir
            ssh asSudo("mark-current-docs", project.version)
        }
    }
}

// fail early if we don't have credentials to connect to the host
gradle.taskGraph.whenReady { graph ->
    if (tasks.withType(SshTask).any { graph.hasTask(it) }) {
        project.websiteScpUserName
        project.websiteScpUserPassword
    }
}
