usePlugin 'groovy'

dependencies {
   compile project(':gradle-core')
   compile project(':gradle-open-api')

    groovy libraries.groovy_depends


    compile libraries.jopt_simple,
            libraries.dom4j,
            libraries.jaxen,
            libraries.commons_io,
            libraries.logback_classic,
            libraries.slf4j_api,
            libraries.jul_to_slf4j,
            libraries.logback_core

    testCompile files(project( ':gradle-core' ).dependencyProject.source.test.classesDir)
}

// The integtests depend on dists because of the wrapper test, and userguideSrc because of the int test generated from
// the userguide source
integTestDistDir = new File( project(':' ).buildDir, 'integtest')
task integTest(type: Test, dependsOn: [ compileTest, project(':gradle-core').compileTest, project(':').explodedDist ]) {
    options.fork(forkMode: ForkMode.ONCE, jvmArgs: ["-ea"])
    options.systemProperties['integTest.gradleHomeDir'] = integTestDistDir.absolutePath
    options.systemProperties['integTest.srcDir'] = file('src').absolutePath

    include 'org/gradle/integtests/**/*IntegrationTest.*'
    exclude '**/Abstract*'
}

//Our tests use some base classes from gradle-core. Currently, we must explicitly state that we
//depend on its compileTests and add its output to our classpath.
compileTest.dependsOn project( ':gradle-core' ).compileTest

integTest.doFirst {
    ant {
        delete(dir: integTestDistDir)
        copy(todir: integTestDistDir) {
            fileset(dir: explodedDistDir )
        }
        chmod(dir: "$integTestDistDir/bin", perm: "ugo+rx", includes: "**/*")
    }
}


//this is just to exclude integration tests
test {
    // We set forkmode to ONCE as our tests are written in Groovy and the startup time of Groovy is significant.
    options.fork(forkMode: ForkMode.ONCE, jvmArgs: ["-ea", '-Xms128m', '-Xmx1g', '-XX:MaxPermSize=128m', '-XX:+HeapDumpOnOutOfMemoryError'])

    exclude 'org/gradle/integtests/**/*.*'
}

// We should not need this, but temporarily this will keep the CI builds from failing 
checkstyleMain.dependsOn(project(':gradle-core').uploadDefaultInternal, project(':gradle-open-api').uploadDefaultInternal)