/*
 * Copyright 2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import org.gradle.testing.PerformanceTest

apply from: 'templates.gradle'

tasks.withType(PerformanceTest) {
    dependsOn prepareSamples
}

task buildScanReport {
    def reportDir = new File(buildDir, "performance-tests/report")
    inputs.files sourceSets.performanceTest.runtimeClasspath
    outputs.dir reportDir

    doLast {
        def cl = new URLClassLoader(sourceSets.performanceTest.runtimeClasspath.collect { it.toURI().toURL() } as URL[], ClassLoader.systemClassLoader.parent)
        def store = cl.loadClass("org.gradle.performance.results.BuildScansResultsStore").newInstance()
        try {
            def generator = cl.loadClass("org.gradle.performance.results.ReportGenerator").newInstance()
            generator.generate(store, reportDir)
        } finally {
            store.close()
        }
    }
}

task buildScanPluginPerformanceTest(type: PerformanceTest) {
    dependsOn largeJavaProjectWithBuildScanPlugin
    finalizedBy buildScanReport
    systemProperties += [incomingArtifactDir: "${rootDir}/incoming/"]

    options {
        includeCategories 'org.gradle.performance.categories.BuildScanPluginPerformanceTest'
    }
}
