/*
 * Copyright 2011 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

archivesBaseName = 'gradle-signing-plugin'
group = 'org.gradle.plugins'
version = '0.0.1-SNAPSHOT'

doSign = !project.hasProperty('noSign') && project.hasProperty("signing.keyId")

buildscript {
	repositories {
		mavenLocal()
		mavenRepo name: "Gradle", urls: "http://repo.gradle.org/gradle/plugins-snapshots/"
	}
	dependencies {
		classpath "org.gradle.plugins:gradle-signing-plugin:0.0.1-SNAPSHOT"
	}
}

apply plugin: 'groovy'
apply plugin: 'maven'

if (doSign) {
	apply plugin: 'signing'
}

repositories {
	mavenCentral()
}

dependencies {
	groovy localGroovy()
	compile gradleApi()
	compile "org.bouncycastle:bcpg-jdk15:1.45"
	testCompile "org.spockframework:spock-core:0.5-groovy-1.7"
}

if (doSign) {
	signing {
		sign jar
	}
}

configurations {
	published.extendsFrom archives
	if (doSign) {
		published.extendsFrom signatures
	}
}

deployUsernameProperty = "gradleRepoUsername"
deployPasswordProperty = "gradleRepoPassword"
canDeploy = [deployUsernameProperty, deployPasswordProperty].every { project.hasProperty(it) }

uploadPublished {
	doFirst {
		if (!canDeploy) {
			throw new InvalidUserDataException("No upload credentials, set '$deployUsernameProperty' and '$deployPasswordProperty' project properties")
		}
	}
	if (canDeploy) {
		repositories {
			project.deployer = repositories.mavenDeployer {
				
				if (doSign) {
					beforeDeployment { MavenDeployment deployment ->
						def signedPomArtifact = sign(deployment.pomArtifact).singleArtifact
						// Have to alter the “type” of the artifact to match what is published
						// See http://issues.gradle.org/browse/GRADLE-1589
						signedPomArtifact.type = "pom." + signing.type.fileExtension
						deployment.addArtifact(signedPomArtifact)
					}
				}
				
				def repoBase = "http://repo.gradle.org/gradle"
				def username = project.properties[deployUsernameProperty]
				def password = project.properties[deployPasswordProperty]
				
				repository(url: "$repoBase/plugins-releases-local") {
					authentication(userName: username, password: password)
				}
				snapshotRepository(url: "$repoBase/plugins-snapshots-local") {
					authentication(userName: username, password: password)
				}
			}
		}
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.0-milestone-3'
}