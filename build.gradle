buildscript {
    ext.kotlinVersion = '1.1.0-dev-372'
    repositories {
        maven {
            url 'https://repo.gradle.org/gradle/repo'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.1.1'
    }
}

task repackageKotlinCompilerEmbeddable(type: Zip) {
    baseName = 'kotlin-compiler-embeddable'
    version = "${kotlinVersion}a"
    extension = 'jar'
    entryCompression = 'stored'
    from({
        def files = configurations.compile.files
        zipTree(files.find { it.name.startsWith(baseName) })
    })
    exclude 'META-INF/services/java.nio.charset.spi.CharsetProvider'
    destinationDir = buildDir
    description "Repackages '$baseName:$version' to remove broken META-INF/services files"
}

apply from: 'build.gradle.kts'

// --- classpath.properties --------------------------------------------
File generatedResourcesDir = file("$buildDir/generate-resources/main")
task generateClasspathManifest(type: codegen.GenerateClasspathManifest) {
    outputDirectory = generatedResourcesDir
}
sourceSets {
    main.output.dir generatedResourcesDir, builtBy: generateClasspathManifest
}


// --- Configure publications ------------------------------------------
artifactory {
    contextUrl = "https://repo.gradle.org/gradle"
    publish {
        repository {
            repoKey = project.version.endsWith('-SNAPSHOT') ?
                'libs-snapshots-local' :
                'libs-releases-local'
            username = project.findProperty("artifactory_user") ?: "nouser"
            password = project.findProperty("artifactory_password") ?: "nopass"
            maven = true
        }
        defaults {
            publications('mavenJava')
        }
    }
    resolve {
        repoKey = 'repo'
    }
}
