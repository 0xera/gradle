/**
 * Tests tasks to allow the gradual introduction of JDK 9 support
 */
String jdkVarName = 'JAVA_9'

task java9IntegTest(type: Test) {
    excludes = [
        // Broken api jar construction due to ASM not working with Java 9 bytecode
        "MixedLegacyAndComponentJvmPluginIntegrationTest",
        "JavaCompilationAgainstApiJarIntegrationTest",
        "JavaLanguageIntegrationTest",
        "SampleJavaLanguageIntegrationTest",
        "CustomComponentJarBinariesIntegrationTest",
        "JarBinaryTypeVariantsTest",
        "JavaJvmAssemblyIntegrationTest",
        "JavaLanguageCustomLibraryDependencyResolutionIntegrationTest",
        "JavaLanguageDependencyResolutionIntegrationTest",
        "JavaLanguageIncrementalBuildIntegrationTest",

        // Broken scala and twirl compilation, broken api jar construction
        "MixedPlayAndJvmLibraryProjectIntegrationTest",
        "PlayAppWithFailingTestsIntegrationTest",
        "PlayMultiProjectApplicationIntegrationTest",
        "PlayPlatformIntegrationTest",
        "PlayBinaryAdvancedAppIntegrationTest",
        "PlayDistributionAdvancedAppIntegrationTest",
        "PlayBinaryBasicAppIntegrationTest",
        "PlayDistributionBasicAppIntegrationTest",
        "PlayTestBasicAppIntegrationTest",
        "PlayContinuousBuildIntegrationTest",
        "PlayMultiProjectContinuousBuildIntegrationTest",
        "PlayMultiProjectReloadIntegrationTest",
        "PlayReloadIntegrationTest",
        "PlayTwirlCompilerContinuousIntegrationTest",
        "PlayBinaryAppWithDependenciesIntegrationTest",
        "PlayDistributionAppWithDependenciesIntegrationTest",
        "PlayTestAppWithDependenciesIntegrationTest",
        "AdvancedPlaySampleIntegrationTest",
        "BasicPlaySampleIntegrationTest",
        "MultiprojectPlaySampleIntegrationTest",
        "UserGuidePlaySamplesIntegrationTest",
        "PlayApplicationPluginIntegrationTest",
        "Play23RoutesCompileIntegrationTest",
        "Play24RoutesCompileIntegrationTest",
        "PlayAssetsJarIntegrationTest",
        "PlayRunIntegrationTest",
        "TwirlCompileIntegrationTest",
        "TwirlVersionIntegrationTest",
        "PlayIdeaPluginAdvancedIntegrationTest",
        "PlayIdeaPluginBasicIntegrationTest",
        "PlayIdeaPluginMultiprojectIntegrationTest",
        "ProjectLayoutIntegrationTest",
        "SamplesMixedJavaAndScalaIntegrationTest",
        "SamplesScalaCustomizedLayoutIntegrationTest",
        "SamplesScalaQuickstartIntegrationTest",
        "JointScalaLangIntegrationTest",
        "SampleScalaLanguageIntegrationTest",
        "ScalaCompileParallelIntegrationTest",
        "ScalaCompilerContinuousIntegrationTest",
        "ScalaLanguageIncrementalBuildIntegrationTest",
        "ScalaLanguageIntegrationTest",
        "ScalaCrossCompilationIntegrationTest",
        "IncrementalScalaCompileIntegrationTest",
        "ZincScalaCompilerIntegrationTest",
        "ScalaTestIntegrationTest",
        "ScalaLibraryInitIntegrationTest",

        // Sample attempts to set max perm space
        "SamplesScalaZincIntegrationTest",

        // Cannot build Gradle with Java 9, compiler bug
        "SrcDistributionIntegrationSpec",

        // Test compiles for Java 5
        "ToolingApiUnsupportedClientJvmCrossVersionSpec",
        "MavenConversionIntegrationTest",
        "IncrementalJavaCompileIntegrationTest",
        "SampleTestNGIntegrationTest",
        "TestNGIntegrationTest",

        // Jetty version does not work on Java 9
        "JettyIntegrationSpec",
        "SamplesWebQuickstartIntegrationTest",

        // Missing class javax/xml/bind/DatatypeConverter on PUT to S3
        "S3ClientIntegrationTest",
        "IvyPublishS3IntegrationTest",
        "IvyS3UploadArchivesIntegrationTest",
        "MavenPublishS3IntegrationTest",

        // Test detection fails as ASM does not understand Java 9 bytecode
        "JUnitComponentUnderTestIntegrationTest",
        "JUnitIncrementalTestExecutionTest",
        "JUnitStandaloneTestExecutionIntegrationTest",

        // Test assumes there is a tools.jar
        "IvyPublishHttpIntegTest",
        "IvyHttpPublishIntegrationTest",

        // Codenarc does not work on Java 9
        "IsolatedAntBuilderMemoryLeakIntegrationTest",

        // Attempts to run Gradle 2.8 on Java 9
        "HeterogeneousCompositeBuildCrossVersionSpec",

        // Affected by hack in JavaPluginConvention to force source and target compatibility to Java 8
        "ToolingApiEclipseModelCrossVersionSpec",
        "CommandLineJavaCompilerIntegrationTest",
        "InProcessGroovyCompilerIntegrationTest",
        "InvokeDynamicGroovyCompilerSpec",
        "DaemonGroovyCompilerIntegrationTest",
        "InProcessJavaCompilerIntegrationTest",
        "DaemonJavaCompilerIntegrationTest",
        "EclipseClasspathIntegrationTest",
        "EclipseIntegrationTest",
        "IdeaJavaLanguageSettingsIntegrationTest",

        // Various problems, eg scala compile
        "UserGuideSamplesIntegrationTest",

        // ??
        "JavaCompileIntegrationTest",
        "BuildDashboardPluginIntegrationTest",
        "JavaLanguageExternalDependencyResolutionIntegrationTest",
        "JavadocIntegrationTest",
        "JUnitConsoleLoggingIntegrationTest",
        "JUnitIntegrationTest",
        "TestNGConsoleLoggingIntegrationTest",
        "JacocoPluginIntegrationTest",
        "EnvJsPluginIntegrationTest",
        "GradleRunnerSamplesEndUserIntegrationTest",
        "MultiRequestWorkerProcessIntegrationTest",
        "SingleRequestWorkerProcessIntegrationTest",
        "WorkerProcessIntegrationTest",
        "PathLimitationIntegrationTest",
        "DirectoryScanningIntegTest",
        "DeprecationHandlingIntegrationTest",
        "BuildSourceBuilderIntegrationTest",
        "ClientShutdownCrossVersionSpec",
        "CompositeBuildDependencyArtifactsCrossVersionSpec",
        "CompositeBuildDependencyGraphCrossVersionSpec",
    ].collect { "**/*${it}*" }
}

task java9Test(type: Test) {
    excludes = [
        // ASM doesn't work with Java 9 bytecode
        "MixInLegacyTypesClassLoaderTest",

        // Affected by hack in JavaPluginConvention to force source and target compatibility to Java 8
        "JavaPluginConventionTest",
        "EclipseModelBuilderTest",
        "IdeaModelBuilderTest",

        // Classes used by junit execution tests
        "ABrokenJunit3TestClass",
        "ABrokenTestClass",
        "ATestClassWhichCannotBeLoaded",
        "ATestClassWithBrokenBeforeAndAfterMethod",
        "ATestClassWithBrokenBeforeClassMethod",
        "ATestClassWithBrokenBeforeMethod",
        "ATestClassWithBrokenConstructor",
        "ATestClassWithBrokenRunner",
        "ATestClassWithRunnerThatBreaksAfterRunningSomeTests",
        "ATestClassWithSeveralMethods",
        "ATestClassWithUnconstructibleRunner",

        // ??
        "DefaultJavaToolChainTest",
        "JdkToolsTest",
        "JdkToolsTest",
        "PayloadSerializerTest",
        "GeneratedArchiveBuildOutcomeComparatorTest",
        "ArchiveEntryTest",
        "GroovyStackTraceSpecTest",
        "DefaultFileOperationsTest"
    ].collect { "**/*${it}*" }
}

tasks.withType(Test).matching { it.name.startsWith("java9") }.all {
    doFirst {
        jvmArgs = []
    }
    executable = "${System.getenv('JAVA_9')}/bin/java"
    reports.junitXml.destination = file("${project.testResultsDir}/$name")
    reports.html.destination = file("${project.reporting.baseDir}/$name")
}

if (!gradle.hasProperty("haveInstalledJava9Guard")) {
    gradle.taskGraph.whenReady { graph ->
        if (gradle.taskGraph.allTasks.any { it.name.startsWith("java9") }) {
            // Ideally, this would be a validate rule but it's not convenient to express this in the DSL yet
            if (!System.getenv(jdkVarName)) {
                throw new GradleException("A '$jdkVarName' environment variable, " +
                    "pointing to a java 9 JDK image, is required to run java9 tests!")
            }
        }
    }
    gradle.ext.haveInstalledJava9Guard = true
}
