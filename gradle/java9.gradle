/**
 * Tests tasks to allow the gradual introduction of JDK 9 support
 */
String jdkVarName = 'JAVA_9'

task java9IntegTest(type: Test) {
    excludes = [
        // Broken scala and twirl compilation, broken api jar construction
        "MixedPlayAndJvmLibraryProjectIntegrationTest",
        "PlayAppWithFailingTestsIntegrationTest",
        "PlayMultiProjectApplicationIntegrationTest",
        "PlayPlatformIntegrationTest",
        "PlayBinaryAdvancedAppIntegrationTest",
        "PlayDistributionAdvancedAppIntegrationTest",
        "PlayBinaryBasicAppIntegrationTest",
        "PlayDistributionBasicAppIntegrationTest",
        "PlayTestBasicAppIntegrationTest",
        "PlayContinuousBuildIntegrationTest",
        "PlayMultiProjectContinuousBuildIntegrationTest",
        "PlayMultiProjectReloadIntegrationTest",
        "PlayReloadIntegrationTest",
        "PlayTwirlCompilerContinuousIntegrationTest",
        "PlayBinaryAppWithDependenciesIntegrationTest",
        "PlayDistributionAppWithDependenciesIntegrationTest",
        "PlayTestAppWithDependenciesIntegrationTest",
        "AdvancedPlaySampleIntegrationTest",
        "BasicPlaySampleIntegrationTest",
        "MultiprojectPlaySampleIntegrationTest",
        "UserGuidePlaySamplesIntegrationTest",
        "PlayApplicationPluginIntegrationTest",
        "Play23RoutesCompileIntegrationTest",
        "Play24RoutesCompileIntegrationTest",
        "PlayAssetsJarIntegrationTest",
        "PlayRunIntegrationTest",
        "TwirlCompileIntegrationTest",
        "TwirlVersionIntegrationTest",

        // Cannot build Gradle with Java 9, compiler bug
        "SrcDistributionIntegrationSpec",

        // Test compiles for Java 5
        "ToolingApiUnsupportedClientJvmCrossVersionSpec",
        "MavenConversionIntegrationTest",

        // Jetty version does not work on Java 9
        "JettyIntegrationSpec",

        // Missing class javax/xml/bind/DatatypeConverter on PUT to S3
        "S3ClientIntegrationTest",
        "IvyPublishS3IntegrationTest",
        "IvyS3UploadArchivesIntegrationTest",
        "MavenPublishS3IntegrationTest",

        // Test assumes there is a tools.jar
        "IvyPublishHttpIntegTest",
        "IvyHttpPublishIntegrationTest",

        // ??
        "ClientShutdownCrossVersionSpec",
        "CompositeBuildDependencyArtifactsCrossVersionSpec",
        "CompositeBuildDependencyGraphCrossVersionSpec",
    ].collect { "**/*${it}*" }
}

task java9Test(type: Test) {
    excludes = [
    ].collect { "**/*${it}*" }
}

tasks.withType(Test).matching { it.name.startsWith("java9") }.all {
    doFirst {
        jvmArgs = []
    }
    executable = "${System.getenv('JAVA_9')}/bin/java"
    reports.junitXml.destination = file("${project.testResultsDir}/$name")
    reports.html.destination = file("${project.reporting.baseDir}/$name")
}

if (!gradle.hasProperty("haveInstalledJava9Guard")) {
    gradle.taskGraph.whenReady { graph ->
        if (gradle.taskGraph.allTasks.any { it.name.startsWith("java9") }) {
            // Ideally, this would be a validate rule but it's not convenient to express this in the DSL yet
            if (!System.getenv(jdkVarName)) {
                throw new GradleException("A '$jdkVarName' environment variable, " +
                    "pointing to a java 9 JDK image, is required to run java9 tests!")
            }
        }
    }
    gradle.ext.haveInstalledJava9Guard = true
}
