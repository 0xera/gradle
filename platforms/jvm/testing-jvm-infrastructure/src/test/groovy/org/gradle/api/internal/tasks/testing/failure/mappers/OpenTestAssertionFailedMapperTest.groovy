/*
 * Copyright 2024 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.gradle.api.internal.tasks.testing.failure.mappers


import org.opentest4j.AssertionFailedError
import org.opentest4j.FileInfo
import spock.lang.Specification

import java.nio.charset.StandardCharsets

class OpenTestAssertionFailedMapperTest extends Specification {

    def "can map null expected values"() {
        given:
        def mapper = new OpenTestAssertionFailedMapper()
        def error = new AssertionFailedError("message", null, actualValue)

        when:
        def supports = mapper.supports(error.class)

        then:
        supports

        when:
        def failure = mapper.map(error, null)

        then:
        failure.details.expected == null
        failure.details.actual == "actual"

        where:
        actualValue << [
            "actual",
            new FileInfo("path", "content".getBytes(StandardCharsets.UTF_8)),
        ]
    }

}
